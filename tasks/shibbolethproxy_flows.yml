- name: Flows | ShibSP | Download | Plugin v{{ shibbolethidp_shibspplugin_version }}
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ shibbolethproxy_shibspplugin_location }}/releases/download/{{ shibbolethproxy_shibspplugin_version }}/shibboleth-idp-authn-shibsp-{{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9.]', '') }}.tar.gz"
    remote_src: yes
    dest: "{{ shibbolethidp_idp_home }}"
  notify: rebuild shibboleth-idp

- name: Flows | Configure | SessionInitiator | /etc/shibboleth/shibboleth2.xml
  blockinfile:
    dest: "/etc/shibboleth/shibboleth2.xml"
    marker: "            <!-- {mark} ansible managed - {{ item['location'] }} SessionInitiator  -->"
    insertbefore: "</Sessions>"
    block: |2
                  <SessionInitiator type="Chaining" Location="/{{ item['location'] }}" isDefault="false" id="{{ item['id'] }}" relayState="cookie">
                    <SessionInitiator type="SAML2" defaultACSIndex="1" acsByIndex="false" template="bindingTemplate.html"/>
                    <SessionInitiator type="SAMLDS" URL="{{ item['ds'] }}" />
                  </SessionInitiator>
  with_items: "{{ userauth_flows }}"
  notify:
   - restart shibboleth-sp

- name: Flows | Create | Authentication methods | flow | directories
  file:
    state: directory
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ item['location'] }}"
  with_items: "{{ userauth_flows }}"

- name: Flows | Create | Authentication method | flow | files
  copy:
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ item['location'] }}/{{ item['location'] | lower }}-flow.xml"
    content: |2
      <?xml version="1.0" encoding="UTF-8"?>
      <flow xmlns="http://www.springframework.org/schema/webflow"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
            parent="authn/Shib">
        <view-state id="ExternalTransfer" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.{{ item['location'] }}.externalAuthnPath')}&amp;forceAuthn=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isForceAuthn()}&amp;isPassive=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive()}&amp;target=#{flowExecutionUrl}%26_eventId_proceed%3D1">
          <transition to="ValidateShibFlowAuthentication" />
        </view-state>
      </flow>
  with_items: "{{ userauth_flows }}"

- name: Flows | Configure | AuthenticationFlows | authn/general-authn.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "      <!-- {mark} ansible managed - {{ item['location'] }} autentication flow  -->"
    insertbefore: "</util:list>"
    block: |2
              <bean id="authn/{{ item['location'] }}" parent="shibboleth.AuthenticationFlow"
                    p:nonBrowserSupported="false" p:forcedAuthenticationSupported="true"/>
  with_items: "{{ userauth_flows }}"
  notify:
   - restart shibboleth-idp

- name: Flows | Configure | AuthenticationFlows | authn/shib-authn-config.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/shib-authn-config.xml"
    marker: "    <!-- {mark} ansible managed - {{ item['location'] }} autentication flow  -->"
    insertafter: "default-destroy-method="
    block: |2
          <bean id="shibboleth.authn.{{ item['location'] }}.externalAuthnPath" class="java.lang.String"
                c:_0="https://{{ shibbolethidp_fqdn }}/Shibboleth.sso/{{ item['location'] }}?foo=bar" />
  with_items: "{{ userauth_flows }}"
  notify:
   - restart shibboleth-idp

- name: Flows | Configure | Flows | idp.properties
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*{{ userauth_item['location'] }})(idp.authn.flows=.*)$
    line: \1|{{ userauth_item['location'] }}
    backrefs: yes
  with_items: "{{ userauth_flows }}"
  loop_control:
    loop_var: userauth_item
