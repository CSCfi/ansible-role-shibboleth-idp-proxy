- name: ShibSP | Shibboleth IdP | Download | Plugin v{{ shibbolethproxy_shibspplugin_version }}
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ shibbolethproxy_shibspplugin_location }}/releases/download/{{ shibbolethproxy_shibspplugin_version }}/shibboleth-idp-authn-shibsp-{{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9.]', '') }}.tar.gz"
    remote_src: yes
    dest: "{{ shibbolethidp_idp_home }}"
    creates: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib/idp-authn-api-shibsp-{{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9.]', '') }}.jar"
    group: jetty
    owner: root
    mode: 0640
  notify: rebuild shibboleth-idp

- name: ShibSP | Detect | Duplicate | Plugins
  find:
    paths: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib"
    patterns: "^(?!.*({{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9.]', '') }})).*shibsp"
    use_regex: true
  register: files_to_delete

- name: ShibSP | Shibboleth IdP | Delete | Older | Plugins
  file:
    path: "{{ shibbolethproxy_item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  loop_control:
    loop_var: shibbolethproxy_item

- name: ShibSP | Shibboleth IdP | Configure | populateHeaders
  xml:
    xpath: "{{ shibbolethproxy_item.xpath }}"
    attribute: "{{ shibbolethproxy_item.attribute }}"
    value: "{{ shibbolethproxy_item.value }}"
    ensure: "{{ shibbolethproxy_item.ensure }}"
    file: "{{ shibbolethidp_idp_home }}/flows/authn/Shib/shib-beans.xml"
    namespaces:
      x: http://www.springframework.org/schema/beans
      p: http://www.springframework.org/schema/p
  with_items:
    - { xpath: "//x:bean[@id='ValidateShibbolethAuthentication']", attribute: "p:populateHeaders", value: "true", ensure: present }
    - { xpath: "//x:bean[@id='ValidateShibbolethAuthentication']", attribute: "p:usernameAttribute", value: "eppn,vppn,mpassUid", ensure: present }
    - { xpath: "//x:bean[@id='ExtractShibbolethHeadersFromRequest']", attribute: "p:headerEncoding", value: "ISO-8859-1", ensure: present }
  loop_control:
    loop_var: shibbolethproxy_item
  notify: restart shibboleth-idp

- name: ShibSP | Flows | Configure | SessionInitiator | /etc/shibboleth/shibboleth2.xml
  blockinfile:
    dest: "/etc/shibboleth/shibboleth2.xml"
    marker: "            <!-- {mark} ansible managed - {{ shibbolethproxy_item['location'] }} SessionInitiator  -->"
    insertbefore: "</Sessions>"
    block: |2
                  <SessionInitiator type="Chaining" Location="/{{ shibbolethproxy_item['location'] }}" isDefault="false" id="{{ shibbolethproxy_item['id'] }}" relayState="cookie">
                    <SessionInitiator type="SAML2" defaultACSIndex="1" acsByIndex="false" template="bindingTemplate.html" />
                    <SessionInitiator type="{% if shibbolethproxy_item.ds is defined %}SAMLDS{%else %}SAML2{% endif %}" URL="{% if shibbolethproxy_item.ds is defined %}{{ shibbolethproxy_item['ds'] }}{% else %}{{ shibbolethproxy_item['entityid']}} {% endif %}" />
                  </SessionInitiator>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-sp

- name: ShibSP | Flows | Create | Authentication methods | flow | directories
  file:
    state: directory
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ shibbolethproxy_item['location'] }}"
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify: 
    - restart shibboleth-idp

- name: ShibSP | Flows | Create | Authentication method | flow | files
  copy:
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ shibbolethproxy_item['location'] }}/{{ shibbolethproxy_item['location'] | lower }}-flow.xml"
    content: |2
      <?xml version="1.0" encoding="UTF-8"?>
      <flow xmlns="http://www.springframework.org/schema/webflow"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
            parent="authn/Shib">
        <view-state id="ExternalTransfer" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.{{ shibbolethproxy_item['location'] }}.externalAuthnPath')}&amp;forceAuthn=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isForceAuthn()}&amp;isPassive=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive()}&amp;target=#{flowExecutionUrl}%26_eventId_proceed%3D1">
          <transition to="ValidateShibFlowAuthentication" />
        </view-state>
      </flow>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify: restart shibboleth-idp

- name: ShibSP | Flows | Configure | AuthenticationFlows | authn/general-authn.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "      <!-- {mark} ansible managed - {{ shibbolethproxy_item['location'] }} autentication flow  -->"
    insertbefore: "</util:list>"
    block: |2
              <bean id="authn/{{ shibbolethproxy_item['location'] }}" parent="shibboleth.AuthenticationFlow" p:nonBrowserSupported="false" p:forcedAuthenticationSupported="true">
                    <property name="supportedPrincipals">
                      <list>
                        <bean parent="shibboleth.SAML2AuthnContextClassRef" c:classRef="https://{{ shibbolethidp_fqdn }}/{{ shibbolethproxy_item['location'] }}" />
                        <bean parent="shibboleth.OIDCAuthnContextClassReference" c:classRef="https://{{ shibbolethidp_fqdn }}/{{ shibbolethproxy_item['location'] }}" />
                      </list>
                    </property>
              </bean>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp

- name: Shibboleth IdP | Flows | Remove | Authn/Password | 
  xml:
    xpath: "//x:bean[@id='authn/Password']"
    state: "absent"
    file: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    namespaces:
      x: http://www.springframework.org/schema/beans
      p: http://www.springframework.org/schema/p

- name: ShibSP | Flows | Configure | AuthenticationFlows | authn/general-authn.xml | loginCSC
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "      <!-- {mark} ansible managed - loginCSC autentication flow  -->"
    insertbefore: "</util:list>"
    block: |2
              <bean id="authn/Password" parent="shibboleth.AuthenticationFlow" p:nonBrowserSupported="false" p:forcedAuthenticationSupported="true">
                    <property name="supportedPrincipals">
                      <list>
                        <bean parent="shibboleth.SAML2AuthnContextClassRef" c:classRef="https://{{ shibbolethidp_fqdn }}/loginCSC" />
                        <bean parent="shibboleth.OIDCAuthnContextClassReference" c:classRef="https://{{ shibbolethidp_fqdn }}/loginCSC" />
                      </list>
                    </property>
              </bean>

- name: ShibSP | Flows | Configure | AuthenticationFlows | authn/shib-authn-config.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/shib-authn-config.xml"
    marker: "    <!-- {mark} ansible managed - {{ shibbolethproxy_item['location'] }} autentication flow  -->"
    insertafter: "default-destroy-method="
    block: |2
          <bean id="shibboleth.authn.{{ shibbolethproxy_item['location'] }}.externalAuthnPath" class="java.lang.String"
                c:_0="https://{{ shibbolethidp_fqdn }}/Shibboleth.sso/{{ shibbolethproxy_item['location'] }}?foo=bar" />
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp

- name: ShibSP | Flows | Configure | Flows | idp.properties
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*{{ shibbolethproxy_item['location'] }})(idp.authn.flows=.*)$
    line: \1|{{ shibbolethproxy_item['location'] }}
    backrefs: yes
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp
