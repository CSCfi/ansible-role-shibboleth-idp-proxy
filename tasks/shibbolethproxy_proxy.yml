# - name: Apache related configuration
# ==================================
- name: Proxy | Apache | configure | conf.d/idpproxy.conf
  template: src={{ idp }}/etc/httpd/conf.d/idpproxy.conf dest=/etc/httpd/conf.d/idpproxy.conf backup=no

- name: Proxy | Apache | configure | index.html
  copy:
    dest: /var/www/html/index.html
    content: |
      <html>
        <head>
          <title>Nothing</title>
        </head>
        <body>
          <p>Nothing here</p>
      </body>
      </html>

- name: Proxy | Apache | Configure | conf.d/shib.conf | /idp block
  blockinfile:
    dest: "/etc/httpd/conf.d/shib.conf"
    marker: "### {mark} ansible managed - idp block ###"
    insertafter: EOF
    block: |
      <Location /idp>
        AuthType shibboleth
        require shibboleth
        ShibUseHeaders On
      </Location>
  notify:
    - restart apache

# - name: Jetty related configuration
# ===================================

- name: Proxy | Jetty | copy | jetty.xml
  copy:
    src: "{{ shibbolethidp_jetty_home }}/etc/jetty.xml"
    dest: "{{ shibbolethidp_jetty_base }}/etc/jetty.xml"
    remote_src: true

- name: Proxy | Jetty | Configure | add Customizer to allow forwarded https
  blockinfile:
    dest: "{{ shibbolethidp_jetty_base }}/etc/jetty.xml"
    marker: "<!-- {mark} ansible managed - customizer to allow forwarded https -->"
    insertafter: '<New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">'
    content: |
      <Call name="addCustomizer">
        <Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
      </Call>

- name: Remove the subjective attribute of the rating element
  xml:
    path: /etc/shibboleth/shibboleth2.xml
    xpath: /x:SPConfig/x:OutOfProcess
    state: absent
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config

- name: Proxy | Shibboleth-sp | Configure | add plugins.so
  blockinfile:
    dest: "/etc/shibboleth/shibboleth2.xml"
    marker: "    <!-- {mark} ansible managed - OutofProcess blocks -->"
    insertafter: '<SPConfig xmlns='
    content: |2
          <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a">
            <Extensions>
              <Library path="plugins.so" fatal="false"/>
            </Extensions>
          </OutOfProcess>


- name: Proxy | Shibboleth-sp | Configure | AttributeResolver 
  blockinfile:
    dest: "/etc/shibboleth/shibboleth2.xml"
    marker: "        <!-- {mark} ansible managed - AttributeResolver block -->"
    insertafter: '<AttributeExtractor type='
    content: |2
              <AttributeResolver type="Chaining">
                <AttributeResolver type="Query" subjectMatch="true"/>
                <AttributeResolver type="Template" sources="virtuLocalID virtuHomeOrganization" dest="virtuPrincipalName">
                  <Template>$virtuLocalID@$virtuHomeOrganization</Template>
                </AttributeResolver>
              </AttributeResolver>

# - name: Shibboleth-IdP related configration
# ===========================================

#- name: IdP.Service | {{ idp }} | IdP | Localization | Enable
#  blockinfile:
#    dest: "{{ shibbolethidp_idp_home }}/conf/mvc-beans.xml"
#    marker: "<!-- {mark} ansible managed - localeResolver -->"
#    insertbefore: "</beans>"
#    block: |
#      <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
#        <property name="cookieName" value="lang"/>
#      </bean>
#  notify:
#    - restart shibboleth-idp

- name: Flows | Configure | SessionInitiator | /etc/shibboleth/shibboleth2.xml
  blockinfile:
    dest: "/etc/shibboleth/shibboleth2.xml"
    marker: "            <!-- {mark} ansible managed - {{ item['location'] }} SessionInitiator  -->"
    insertbefore: "</Sessions>"
    block: |2
                  <SessionInitiator type="Chaining" Location="/{{ item['location'] }}" isDefault="false" id="{{ item['id'] }}" relayState="cookie">
                    <SessionInitiator type="SAML2" defaultACSIndex="1" acsByIndex="false" template="bindingTemplate.html"/>
                    <SessionInitiator type="SAMLDS" URL="{{ item['ds'] }}" />
                  </SessionInitiator>
  with_items: "{{ userauth_flows }}"
  notify:
   - restart shibboleth-sp

- name: Flows | Create | Authentication methods | flow | directories
  file:
    state: directory
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ item['location'] }}"
  with_items: "{{ userauth_flows }}"

- name: Flows | Create | Authentication method | flow | files
  copy:
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ item['location'] }}/{{ item['location'] | lower }}-flow.xml"
    content: |2
      <?xml version="1.0" encoding="UTF-8"?>
      <flow xmlns="http://www.springframework.org/schema/webflow"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
            parent="authn/Shib">
        <view-state id="ExternalTransfer" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.{{ item['location'] }}.externalAuthnPath')}&amp;forceAuthn=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isForceAuthn()}&amp;isPassive=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive()}&amp;target=#{flowExecutionUrl}%26_eventId_proceed%3D1">
          <transition to="ValidateShibFlowAuthentication" />
        </view-state>
      </flow>
  with_items: "{{ userauth_flows }}"

- name: Flows | Configure | AuthenticationFlows | authn/general-authn.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "      <!-- {mark} ansible managed - {{ item['location'] }} autentication flow  -->"
    insertbefore: "</util:list>"
    block: |2
              <bean id="authn/{{ item['location'] }}" parent="shibboleth.AuthenticationFlow"
                    p:nonBrowserSupported="false" p:forcedAuthenticationSupported="true"/>
  with_items: "{{ userauth_flows }}"
  notify:
   - restart shibboleth-idp

- name: Flows | Configure | AuthenticationFlows | authn/shib-authn-config.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/shib-authn-config.xml"
    marker: "    <!-- {mark} ansible managed - {{ item['location'] }} autentication flow  -->"
    insertafter: "default-destroy-method="
    block: |2
          <bean id="shibboleth.authn.{{ item['location'] }}.externalAuthnPath" class="java.lang.String"
                c:_0="https://{{ shibbolethidp_fqdn }}/Shibboleth.sso/{{ item['location'] }}?foo=bar" />
  with_items: "{{ userauth_flows }}"
  notify:
   - restart shibboleth-idp

- name: Flows | Configure | Flows | idp.properties
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*{{ userauth_item['location'] }})(idp.authn.flows=.*)$
    line: \1|{{ userauth_item['location'] }}
    backrefs: yes
  with_items: "{{ userauth_flows }}"
  loop_control:
    loop_var: userauth_item

# - name: JSON relaying party configuration
# # ===========================================
#
- set_fact:
    rps: []

- name: RPs | Combine | Default values for missing attributes
  set_fact: rps="{{ rps + [userauth_rpdefaults|combine(userauth_item, recursive=True )]}}"
  with_items: "{{ userauth_rps }}"
  loop_control:
    loop_var: userauth_item

- name: RPs | Generate | {{ shibbolethidp_idp_home }}/metadata/oidc-client.json
  copy:
    dest: "{{ shibbolethidp_idp_home }}/metadata/oidc-client.json"
    content: "{{ rps | to_nice_json | string }}\n"


# - name: Shibboleth-IdP Disco
# ===========================================

- name: Disco | Configure | AuthenticationFlow | authn/general-authn.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "      <!-- {mark} ansible managed - Disco authentication flow ! KEEP ON TOP ! -->"
    insertafter: "shibboleth.AvailableAuthenticationFlows"
    block: |2
              <bean id="authn/Disco" parent="shibboleth.AuthenticationFlow"
                    p:nonBrowserSupported="false" p:forcedAuthenticationSupported="true"/>
  notify:
   - restart shibboleth-idp

- name: Disco | Configure | Flow | idp.properties
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*Disco)(idp.authn.flows=.*)$
    line: \1|Disco
    backrefs: yes
