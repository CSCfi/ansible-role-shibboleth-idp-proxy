# - name: Apache related configuration
# ==================================
- name: Proxy | Apache | configure | conf.d/idpproxy.conf
  template: src=etc/httpd/conf.d/idpproxy.conf dest=/etc/httpd/conf.d/idpproxy.conf backup=no

- name: Proxy | Apache | configure | index.html
  copy:
    dest: /var/www/html/index.html
    content: |
      <html>
        <head>
          <title>Nothing</title>
        </head>
        <body>
          <p>Nothing here</p>
      </body>
      </html>

- name: Proxy | Apache | Configure | conf.d/shib.conf | /idp block
  blockinfile:
    dest: "/etc/httpd/conf.d/shib.conf"
    marker: "### {mark} ansible managed - idp block ###"
    insertafter: EOF
    block: |
      <Location /idp>
        AuthType shibboleth
        require shibboleth
        ShibUseHeaders On
      </Location>
  notify:
    - restart apache

# - name: Jetty related configuration
# ===================================

- name: Proxy | Jetty | copy | jetty.xml
  copy:
    src: "{{ shibbolethidp_jetty_home }}/etc/jetty.xml"
    dest: "{{ shibbolethidp_jetty_base }}/etc/jetty.xml"
    remote_src: true

- name: Proxy | Jetty | Configure | add Customizer to allow forwarded https
  blockinfile:
    dest: "{{ shibbolethidp_jetty_base }}/etc/jetty.xml"
    marker: "<!-- {mark} ansible managed - customizer to allow forwarded https -->"
    insertafter: '<New id="httpConfig" class="org.eclipse.jetty.server.HttpConfiguration">'
    content: |
      <Call name="addCustomizer">
        <Arg><New class="org.eclipse.jetty.server.ForwardedRequestCustomizer"/></Arg>
      </Call>

# - name: Shibboleth SP related configurations
# ============================================

- name: Remove the subjective attribute of the rating element
  xml:
    path: /etc/shibboleth/shibboleth2.xml
    xpath: /x:SPConfig/x:OutOfProcess
    state: absent
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config

- name: Proxy | Shibboleth-sp | Configure | add plugins.so
  blockinfile:
    dest: "/etc/shibboleth/shibboleth2.xml"
    marker: "    <!-- {mark} ansible managed - OutofProcess blocks -->"
    insertafter: '<SPConfig xmlns='
    content: |2
          <OutOfProcess tranLogFormat="%u|%s|%IDP|%i|%ac|%t|%attr|%n|%b|%E|%S|%SS|%L|%UA|%a">
            <Extensions>
              <Library path="plugins.so" fatal="false"/>
            </Extensions>
          </OutOfProcess>

- name: Proxy | ShibSP | Remove | AttributeResolver
  xml:
    path: /etc/shibboleth/shibboleth2.xml
    xpath: "/x:SPConfig/x:ApplicationDefaults/x:AttributeResolver[@type='Chaining']"
    state: absent
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config

- name: Proxy | Shibboleth-sp | Configure | AttributeResolver
  xml:
    file: "/etc/shibboleth/shibboleth2.xml"
    xpath: '/x:SPConfig/x:ApplicationDefaults/x:AttributeExtractor'
    insertafter: true
    pretty_print: yes
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config
    add_children:
      - AttributeResolver:
          type: "Chaining"
          _:
            - AttributeResolver:
                type: "Query"
                subjectMatch: "true"
            - AttributeResolver:
                type: "Template"
                sources: "virtuLocalID virtuHomeOrganization"
                dest: "vppn"
                _:
                  - Template: "$virtuLocalID@$virtuHomeOrganization"
            - AttributeResolver:
                type: "Template"
                sources: "EduuniId"
                dest: "EduuniIdScoped"
                _:
                  - Template: "$EduuniId@eduuni.fi"

- name: Shibboleth IdP | OIDC | Configure | global.xml | Serializers
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/global.xml"
    marker: "    <!-- {mark} ansible managed - OIDC Serializers  -->"
    insertbefore: "</beans>"
    content: |2
          <bean id="shibboleth.PrincipalSerializers" class="org.springframework.beans.factory.config.ListFactoryBean">
            <property name="sourceList">
              <list>
                <bean class="fi.mpass.shibboleth.authn.principal.impl.ShibAttributePrincipalSerializer" />
                <bean class="fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.UsernamePrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.LDAPPrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.duo.impl.DuoPrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.IdPAttributePrincipalSerializer" />
                <bean class="net.shibboleth.idp.authn.principal.impl.PasswordPrincipalSerializer" p:dataSealer="#{'%{idp.sealer.storeResource:}'.trim().length() > 0 ? getObject('shibboleth.DataSealer') : null}" />
              </list>
            </property>
          </bean>

# - name: Shibboleth-IdP related configration
# ===========================================

- name: Shibboleth IdP | OIDC | Configure | relaying-party.xml | remove consents and signs
  xml:
    xpath: "{{ shibbolethidp_item }}"
    state: "absent"
    file: /opt/shibboleth-idp/conf/relying-party.xml
    namespaces:
      x: http://www.springframework.org/schema/beans
      p: http://www.springframework.org/schema/p
  with_items:
    - "//x:bean[@parent='SAML2.SSO']/@p:postAuthenticationFlows"
    - "//x:bean[@parent='SAML2.SSO']/@p:signAssertions"
    - "//x:bean[@parent='SAML2.SSO']/@p:signResponses"
    - "//x:bean[@parent='SAML2.SSO']/@p:encryptAssertions"
    - "//x:bean[@parent='OIDC.SSO']/@p:postAuthenticationFlows"
  loop_control:
    loop_var: shibbolethidp_item
  notify: restart shibboleth-idp

- name: Main | Jetty | Configure | settings 
  lineinfile: dest={{ item.dst }} regexp="^#?\s*({{ item.name }}\s*=)" backrefs=yes  line="\\1 {{ item.value }}"
  with_items: 
    - name: jetty.httpConfig.requestHeaderSize
      dst: "{{ shibbolethidp_jetty_base }}/start.d/server.ini"
      value: 32768

#- name: IdP.Service | {{ idp }} | IdP | Localization | Enable
#  blockinfile:
#    dest: "{{ shibbolethidp_idp_home }}/conf/mvc-beans.xml"
#    marker: "<!-- {mark} ansible managed - localeResolver -->"
#    insertbefore: "</beans>"
#    block: |
#      <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
#        <property name="cookieName" value="lang"/>
#      </bean>
#  notify:
#    - restart shibboleth-idp
