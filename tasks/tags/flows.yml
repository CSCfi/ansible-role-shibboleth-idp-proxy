- name: ShibSP | Shibboleth IdP | Download | Plugin v{{ shibbolethproxy_shibspplugin_version }}
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ shibbolethproxy_shibspplugin_location }}/releases/download/{{ shibbolethproxy_shibspplugin_version }}/shibboleth-idp-authn-shibsp-{{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9rc.-]', '') }}.tar.gz"
    remote_src: yes
    dest: "{{ shibbolethidp_idp_home }}"
    creates: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib/idp-authn-api-shibsp-{{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9rc.-]', '') }}.jar"
    group: jetty
    owner: root
    mode: 0640
  notify: rebuild shibboleth-idp

- name: ShibSP | Detect | Duplicate | Plugins
  find:
    paths: "{{ shibbolethidp_idp_home }}/edit-webapp/WEB-INF/lib"
    patterns: "^(?!.*({{ shibbolethproxy_shibspplugin_version | regex_replace('[^0-9rc.-]', '') }})).*shibsp"
    use_regex: true
  register: files_to_delete

- name: ShibSP | Shibboleth IdP | Delete | Older | Plugins
  file:
    path: "{{ shibbolethproxy_item.path }}"
    state: absent
  with_items: "{{ files_to_delete.files }}"
  loop_control:
    loop_var: shibbolethproxy_item

- name: ShibSP | Shibboleth IdP | Configure | populateHeaders
  xml:
    xpath: "{{ shibbolethproxy_item.xpath }}"
    attribute: "{{ shibbolethproxy_item.attribute }}"
    value: "{{ shibbolethproxy_item.value }}"
    ensure: "{{ shibbolethproxy_item.ensure }}"
    file: "{{ shibbolethidp_idp_home }}/flows/authn/Shib/shib-beans.xml"
    namespaces:
      x: http://www.springframework.org/schema/beans
      p: http://www.springframework.org/schema/p
      util: http://www.springframework.org/schema/util
  with_items:
    - { xpath: "//x:bean[@id='ValidateShibbolethAuthentication']", attribute: "p:populateHeaders", value: "true", ensure: present }
    - { xpath: "//x:bean[@id='ValidateShibbolethAuthentication']", attribute: "p:usernameAttribute", value: "SHIBSP-eppn,eppn,vppn,mpassUid,EduuniId,nationalIdentificationNumber,eduPersonUniqueId", ensure: present }
    - { xpath: "//x:bean[@id='ExtractShibbolethHeadersFromRequest']", attribute: "p:headerEncoding", value: "ISO-8859-1", ensure: present }
    - { xpath: "//x:bean[@id='ExtractShibbolethHeadersFromRequest']/x:constructor-arg", attribute: "value", value: "SHIBSP-", ensure: present }
    - { xpath: "//x:bean[@id='ExtractShibbolethPrincipals']", attribute: "p:headerEncoding", value: "ISO-8859-1", ensure: present }
    - { xpath: "//x:bean[@id='ExtractShibbolethPrincipals']/x:constructor-arg", attribute: "value", value: "SHIBSP-", ensure: present }
    - { xpath: "//util:list[@id='attributeNames']/x:value", attribute: NULL, value: NULL, ensure: absent }
  loop_control:
    loop_var: shibbolethproxy_item
  notify: restart shibboleth-idp

- name: ShibSP | Shibboleth IdP | Configure | populateHeaders | vppn, eppn
  xml:
    file: "{{ shibbolethidp_idp_home }}/flows/authn/Shib/shib-beans.xml"
    xpath: "//util:list[@id='attributeNames']"
    pretty_print: yes
    namespaces:
      x: http://www.springframework.org/schema/beans
      util: http://www.springframework.org/schema/util
    add_children:
      - value: SHIBSP-eppn
      - value: vppn

- name: Proxy | ShibSP | clean | SessionInitiators
  xml:
    xpath: "/x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SessionInitiator[@Location=\"/{{ shibbolethproxy_item['location'] }}\"]"
    ensure: absent
    file: /etc/shibboleth/shibboleth2.xml
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-sp

- name: Proxy | ShibSP | Configure | SessionInitiator
  xml:
    file: "/etc/shibboleth/shibboleth2.xml"
    xpath: "//x:SPConfig/x:ApplicationDefaults/x:Sessions/x:Handler[@type='DiscoveryFeed']"
    insertafter: yes
    pretty_print: yes
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config
    add_children:
      - SessionInitiator:
          type: "Chaining"
          Location: "/{{ shibbolethproxy_item['location'] }}"
          entityID: "{{ shibbolethproxy_item['entityid'] | default('') }}"
          Default: "false"
          id: "{{ shibbolethproxy_item['id'] }}" 
          relayState: "cookie"
          _:
             - SessionInitiator:
                 type: "SAML2"
                 defaultACSIndex: "1"
                 acsByIndex: "false"
                 template: "bindingTemplate.html"
             - SessionInitiator:
                 type: "SAMLDS"
                 URL: "{{ shibbolethproxy_item['ds'] | default('') }}"
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-sp

- name: Proxy | ShibSP | clean | SessionInitiators
  xml:
    xpath: "{{ shibbolethproxy_item.xpath }}"
    attribute: "{{ shibbolethproxy_item.attribute }}"
    value: "{{ shibbolethproxy_item.value }}"
    ensure: "{{ shibbolethproxy_item.ensure }}"
    file: /etc/shibboleth/shibboleth2.xml
    namespaces:
      x: urn:mace:shibboleth:3.0:native:sp:config
  with_items:
    - { xpath: "/x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SessionInitiator[@entityID='']/@entityID", attribute: "entityID", value: NULL, ensure: absent }
    - { xpath: "/x:SPConfig/x:ApplicationDefaults/x:Sessions/x:SessionInitiator/x:SessionInitiator[@URL='']", attribute: NULL, value: NULL, ensure: absent }
  loop_control:
    loop_var: shibbolethproxy_item
  notify: restart shibboleth-sp

- name: ShibSP | Flows | Create | Authentication methods | flow | directories
  file:
    state: directory
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ shibbolethproxy_item['location'] }}"
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify: 
    - restart shibboleth-idp

- name: ShibSP | Flows | Create | Authentication method | flow | files
  copy:
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ shibbolethproxy_item['location'] }}/{{ shibbolethproxy_item['location'] | lower }}-flow.xml"
    content: |2
      <?xml version="1.0" encoding="UTF-8"?>
      <flow xmlns="http://www.springframework.org/schema/webflow"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
            parent="authn/Shib">
        <view-state id="ExternalTransfer" view="externalRedirect:#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.{{ shibbolethproxy_item['location'] }}.externalHandler')}?forceAuthn=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isForceAuthn()}&amp;isPassive=#{opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).isPassive()}&amp;target=#{flowRequestContext.getActiveFlow().getApplicationContext().getBean('shibboleth.authn.{{ shibbolethproxy_item['location'] }}.externalAuthServlet')}%3Fconversation=#{flowExecutionContext.getKey().toString()}">
          <attribute name="csrf_excluded" value="true" type="boolean"/>
          <transition to="ValidateShibFlowAuthentication" />
        </view-state>
      </flow>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify: restart shibboleth-idp

- name: ShibSP | Flows | Create | Authentication method | bean | files
  copy:
    dest: "{{ shibbolethidp_idp_home }}/flows/authn/{{ shibbolethproxy_item['location'] }}/{{ shibbolethproxy_item['location'] | lower }}-beans.xml"
    content: |2
      <?xml version='1.0' encoding='UTF-8'?>
      <beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util" 
        xmlns:p="http://www.springframework.org/schema/p" 
        xmlns:c="http://www.springframework.org/schema/c" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd" default-init-method="initialize" default-destroy-method="destroy">

        <import resource="../../../conf/authn/shib-authn-config.xml"/> <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" p:placeholderPrefix="%{" p:placeholderSuffix="}"/>
        <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor"/>
        <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor"/>

        <bean id="shibboleth.authn.Shib.acceptablePredicate" class="fi.csc.shibboleth.authn.impl.IdpFoundFromMetadataResolverPredicate" c:metadataResolver-ref="{{ shibbolethproxy_item['location'] }}Feed" />
 
        <bean id="{{ shibbolethproxy_item['location'] }}Feed" class="org.opensaml.saml.metadata.resolver.impl.FileBackedHTTPMetadataResolver" c:client-ref="shibboleth.NonCachingHttpClient"
         c:backupFilePath="/tmp/{{ shibbolethproxy_item['location'] }}-metadata.xml" c:metadataURL="{{ shibbolethproxy_item['metadataurl'] }}" p:parserPool-ref="shibboleth.ParserPool" p:id="{{ shibbolethproxy_item['location'] }}Feed" />
      </beans>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify: restart shibboleth-idp

- name: ShibSP | Flows | Configure | AuthenticationFlows | authn/general-authn.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    marker: "    <!-- {mark} ansible managed - {{ shibbolethproxy_item['location'] }} autentication flow  -->"
    insertbefore: "</beans>"
    block: |2
          <bean id="authn/{{ shibbolethproxy_item['location'] }}" parent="shibboleth.AuthenticationFlow" p:nonBrowserSupported="false" p:forcedAuthenticationSupported="true">
            <property name="supportedPrincipals">
              <list>
                {% if shibbolethproxy_item['SAML2AuthnContextClassRefs'] is defined %}
                {% for SAML2AuthnContextClassRef in shibbolethproxy_item['SAML2AuthnContextClassRefs'] %}
                <bean parent="shibboleth.SAML2AuthnContextClassRef" c:classRef="{{ SAML2AuthnContextClassRef }}" />
                <bean parent="shibboleth.OIDCAuthnContextClassReference" c:classRef="{{ SAML2AuthnContextClassRef }}" />
                {% endfor %}
                {% else %}
                <bean parent="shibboleth.SAML2AuthnContextClassRef" c:classRef="https://{{ shibbolethidp_fqdn }}/{{ shibbolethproxy_item['location'] }}" />
                <bean parent="shibboleth.OIDCAuthnContextClassReference" c:classRef="https://{{ shibbolethidp_fqdn }}/{{ shibbolethproxy_item['location'] }}" />
                {% endif %}
              </list>
            </property>
          </bean>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp

- name: ShibSP | Flows | Configure | AuthenticationFlows | authn/general-authn.xml | Disco
  xml:
    file: "{{ shibbolethidp_idp_home }}/conf/authn/general-authn.xml"
    xpath: "//x:bean[@id='authn/Disco']/x:property[@name='supportedPrincipals']/x:list"
    #    insertafter: yes
    pretty_print: yes
    namespaces:
      x: http://www.springframework.org/schema/beans
      p: http://www.springframework.org/schema/p
      util: http://www.springframework.org/schema/util
    add_children:
      - bean:
          parent: "shibboleth.OIDCAuthnContextClassReference"
          "{http://www.springframework.org/schema/c}classRef": "https://{{ shibbolethidp_fqdn }}/{{ shibbolethproxy_item['location'] }}"
      - bean:
          parent: "shibboleth.SAML2AuthnContextClassRef"
          "{http://www.springframework.org/schema/c}classRef": "https://{{ shibbolethidp_fqdn }}/{{ shibbolethproxy_item['location'] }}"
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp

- name: Proxy | Apache | Configure | conf.d/shib.conf | /idp block
  blockinfile:
    dest: "/etc/httpd/conf.d/shib.conf"
    marker: "### {mark} ansible managed - {{ shibbolethproxy_item['location'] }} block ###"
    insertafter: EOF
    block: |
      <Location /idp/Authn/{{ shibbolethproxy_item['location'] }}>
        AuthType shibboleth
        require shibboleth
        ShibUseHeaders On
      </Location>
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
    - restart apache

- name: Proxy | Apache | Remove | conf.d/shib.conf | /idp block
  blockinfile:
    dest: "/etc/httpd/conf.d/shib.conf"
    marker: "### {mark} ansible managed - idp block ###"
    state: absent
  notify:
    - restart apache
 
- name: ShibSP | Flows | Configure | AuthenticationFlows | authn/shib-authn-config.xml
  blockinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/authn/shib-authn-config.xml"
    marker: "    <!-- {mark} ansible managed - {{ shibbolethproxy_item['location'] }} autentication flow  -->"
    insertafter: "default-destroy-method="
    block: |2
          <bean id="shibboleth.authn.{{ shibbolethproxy_item['location'] }}.externalHandler" class="java.lang.String"
                c:_0="https://{{ shibbolethidp_fqdn }}/Shibboleth.sso/{{ shibbolethproxy_item['location'] }}" />
          <bean id="shibboleth.authn.{{ shibbolethproxy_item['location'] }}.externalAuthServlet" class="java.lang.String"
                c:_0="https://dev-user-auth.csc.fi/idp/Authn/{{ shibbolethproxy_item['location'] }}" />
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp

- name: ShibSP i| Flows | Configure | Flows | idp.properties
  lineinfile:
    dest: "{{ shibbolethidp_idp_home }}/conf/idp.properties"
    regexp: ^(?!.*{{ shibbolethproxy_item['location'] }})(idp.authn.flows=.*)$
    line: \1|{{ shibbolethproxy_item['location'] }}
    backrefs: yes
  with_items: "{{ shibbolethproxy_flows }}"
  loop_control:
    loop_var: shibbolethproxy_item
  notify:
   - restart shibboleth-idp

     ## RelyingPartyyn entityID:t jos muuttuvat
     ## Apache lokaatiot
