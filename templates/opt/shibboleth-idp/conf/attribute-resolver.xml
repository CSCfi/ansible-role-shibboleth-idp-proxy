<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    This file is an EXAMPLE configuration file. While the configuration
    presented in this example file is semi-functional, it isn't very
    interesting. It is here only as a starting point for your deployment
    process.
    
    Very few attribute definitions and data connectors are demonstrated,
    and the data is derived statically from the logged-in username and a
    static example connector.

    Attribute-resolver-full.xml contains more examples of attributes,
    encoders, and data connectors. Deployers should refer to the Shibboleth
    documentation for a complete list of components and their options.
-->
<AttributeResolver xmlns="urn:mace:shibboleth:2.0:resolver" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 	xmlns:enc="urn:mace:shibboleth:2.0:attribute:encoder"
               		xmlns:oidcext="org.geant.idpextension.oidc.attribute.encoder"
               		xsi:schemaLocation="urn:mace:shibboleth:2.0:resolver http://shibboleth.net/schema/idp/shibboleth-attribute-resolver.xsd
               		org.geant.idpextension.oidc.attribute.encoder classpath:/schema/idp-oidc-extension-attribute-encoder.xsd">
               	
    <!-- ========================================== -->
    <!--      Attribute Definitions                 -->
    <!-- ========================================== -->

    <AttributeDefinition id="uid" xsi:type="PrincipalName">
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:0.9.2342.19200300.100.1.1" friendlyName="uid" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="uid" setToToken="true" />
    </AttributeDefinition>

    <AttributeDefinition id="mail_ldap" xsi:type="Simple">
      <InputDataConnector ref="myLDAP" attributeNames="cn" />    
    </AttributeDefinition>

    <AttributeDefinition id="mail" xsi:type="ScriptedAttribute">
      <InputDataConnector ref="myLDAP" attributeNames="mail" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:0.9.2342.19200300.100.1.3" friendlyName="mail" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="email" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("mail".equals(principal.getKey())) {
              mail.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="displayName" xsi:type="ScriptedAttribute">
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.16.840.1.113730.3.1.241" friendlyName="givenName" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="displayName" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("givenName".equals(principal.getKey())) {
              displayName.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="givenName" xsi:type="ScriptedAttribute">
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.42" friendlyName="givenName" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="given_name" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("givenName".equals(principal.getKey())) {
              givenName.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="cn_ldap" xsi:type="Simple">
      <InputDataConnector ref="myLDAP" attributeNames="cn" />    
    </AttributeDefinition>

    <AttributeDefinition id="cn" xsi:type="ScriptedAttribute">
      <InputDataConnector ref="myLDAP" attributeNames="cn" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.3" friendlyName="cn" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="name" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("cn".equals(principal.getKey())) {
              cn.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="sn" xsi:type="ScriptedAttribute">
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:2.5.4.4" friendlyName="sn" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="family_name" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("sn".equals(principal.getKey())) {
              sn.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="schacHomeOrganization" xsi:type="ScriptedAttribute">
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.25178.1.2.9" friendlyName="schacHomeOrganization" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="schacHomeOrganization" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("schacHomeOrganization".equals(principal.getKey())) {
              schacHomeOrganization.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="schacHomeOrganizationType" xsi:type="ScriptedAttribute">
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.25178.1.2.10" friendlyName="schacHomeOrganizationType" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="schacHomeOrganizationType" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("schacHomeOrganizationType".equals(principal.getKey())) {
              schacHomeOrganizationType.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="eduPersonPrincipalName" xsi:type="ScriptedAttribute">
      <InputDataConnector ref="myLDAP" attributeNames="eduPersonPrincipalName" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.6" friendlyName="eppn" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="eppn" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("eppn".equals(principal.getKey())) {
              eduPersonPrincipalName.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="virtuPersonPrincipalName" xsi:type="ScriptedAttribute">
      <AttributeEncoder xsi:type="SAML2String" name="1.3.6.1.4.1.16161.4.0.161" friendlyName="vppn" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="virtuPersonPrincipalName" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("vppn".equals(principal.getKey())) {
              virtuPersonPrincipalName.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="nationalIdentificationNumber" xsi:type="ScriptedAttribute">
      <InputDataConnector ref="myLDAP" attributeNames="nationalIdentificationNumber" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.2.246.21" friendlyName="nationalIdentificationNumber" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="nationalIdentificationNumber" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("nationalIdentificationNumber".equals(principal.getKey())) {
              nationalIdentificationNumber.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="eduPersonUniqueId" xsi:type="ScriptedAttribute">
      <InputDataConnector ref="myLDAP" attributeNames="eduPersonUniqueId" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.13" friendlyName="eduPersonUniqueId" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="eduPersonUniqueId" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("eduPersonUniqueId".equals(principal.getKey())) {
              eduPersonUniqueId.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>

    <AttributeDefinition id="mpassUid" xsi:type="ScriptedAttribute">
      <InputDataConnector ref="myLDAP" attributeNames="mpassUid" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:mpass.id:uid" friendlyName="mpassUid" encodeType="false" />
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="mpassUid" setToToken="true" />
      <Script><![CDATA[
        authnContext = resolutionContext.getParent().getSubcontext("net.shibboleth.idp.authn.context.AuthenticationContext");
        if (authnContext !== null) {
          subject = authnContext.getAuthenticationResult().getSubject();
          principals = subject.getPrincipals(Java.type("fi.mpass.shibboleth.authn.principal.impl.ShibHeaderPrincipal").class);
          iterator = principals.iterator();
          while (iterator.hasNext()) {
            principal = iterator.next();
            if ("mpassUid".equals(principal.getKey())) {
              mpassUid.addValue(principal.getValue());
            }
          }
        }
      ]]></Script>
    </AttributeDefinition>



    <AttributeDefinition id="CSCUserName" xsi:type="Simple">
      <InputDataConnector ref="myLDAP" attributeNames="CSCUserName" />
      <AttributeEncoder xsi:type="SAML2String" name="urn:oid:1.3.6.1.4.1.16161.4.0.53" friendlyName="CSCUserName" encodeType="false"/>
      <AttributeEncoder xsi:type="oidcext:OIDCString" name="CSCUserName" placeToIDToken="true" setToToken="true"  />
    </AttributeDefinition>

    
        <!-- Subject Identifier is a attribute that must always be resolved.
    There has to be exactly one resolved and filtered attribute that would be encoded as 'sub'.
    This example attribute (the data connector actually ) will generate public or pairwise 'sub' depending on client registration data.  -->

    <AttributeDefinition id="subject" xsi:type="Simple" activationConditionRef="SubjectRequired">
       <InputDataConnector ref="computedSubjectId" attributeNames="subjectId"/>
       <AttributeEncoder xsi:type="oidcext:OIDCString" name="sub" />
    </AttributeDefinition>
    
    <!--
    This is an example of an attribute sourced from a data connector.
    -->
    <AttributeDefinition id="eduPersonScopedAffiliation" xsi:type="Scoped" scope="%{idp.scope}">
     	<InputDataConnector ref="staticAttributes" attributeNames="affiliation" />
	    <AttributeEncoder xsi:type="SAML2ScopedString" name="urn:oid:1.3.6.1.4.1.5923.1.1.1.9" friendlyName="eduPersonScopedAffiliation" encodeType="false" />
       	<AttributeEncoder xsi:type="oidcext:OIDCString" name="eduPersonScopedAffiliation" />
    </AttributeDefinition>

    <!-- ========================================== -->
    <!--      Data Connectors                       -->
    <!-- ========================================== -->

    <DataConnector id="staticAttributes" xsi:type="Static">
      <Attribute id="affiliation">
        <Value>member</Value>
      </Attribute>
    </DataConnector>
    
    <DataConnector id="myLDAP" xsi:type="LDAPDirectory"
      ldapURL="%{idp.attribute.resolver.LDAP.ldapURL}"
      baseDN="%{idp.attribute.resolver.LDAP.baseDN}"
      principal="%{idp.attribute.resolver.LDAP.bindDN}"
      principalCredential="%{idp.attribute.resolver.LDAP.bindDNCredential}">
      <FilterTemplate>
        <![CDATA[
        (|(eduPersonPrincipalName=$resolutionContext.principal)(virtuPersonPrincipalName=$resolutionContext.principal)(uid=$resolutionContext.principal) )
        ]]>
      </FilterTemplate>
    </DataConnector>
    <DataConnector id="computedSubjectId" xsi:type="ComputedId" generatedAttributeID="subjectId"
      salt="%{idp.oidc.subject.salt}"
      algorithm="%{idp.oidc.subject.algorithm:SHA}"
      encoding="%{idp.oidc.subject.encoding:BASE32}">
      <InputAttributeDefinition ref="%{idp.oidc.subject.sourceAttribute}"/>
    </DataConnector>    
</AttributeResolver>
